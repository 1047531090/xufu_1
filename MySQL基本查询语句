一：单表查询：1：查询所有字段：1:在select语句中使用星号'*'通配符查询所有字段:select * from 表名；
                                                         2：在select语句中指定所有字段：select  字段1，字段2，.....字段n  from  表名；
                          2：查询指定字段：1：查询单个字段:select 列名 from 表名;
                                                       2：查询多个字段：select 字段1，字段2，...，字段n  from 表名；
               3:查询指定记录:select 字段1，字段2，......，字段n
                                                  from 表名
                                                  where 查询条件（=相等，!=不相等，<小于，<=小于或等于，>大于，>=大于或者等于，between位于两者之间）
                        4：查询带in关键字：select 字段1，字段2，......，字段n
                                                        from 表名
                                                        where  字段名 in/not in (数据1，数据2)
                                                       order by 字段名；
                       5：带between 开始值 and 结束值 的范围查询：select 字段1，字段2，......，字段n
                                                                                                from 表名
                                                                                                 where  字段名  between  数据1  and  数据2；
                      6：带like的字符匹配查询:1:百分号通配符'%',匹配任意长度的字符，甚至包括零字符：
                                                                                               select 字段1，字段2，......，字段n
                                                                                                from 表名
                                                                                                 where  字段名  like   '查询的字母%'；
                                                               2：下划线通配符'_',一次只能匹配任意一个字符：
                                                                                                select 字段1，字段2，......，字段n
                                                                                                from 表名
                                                                                                 where  字段名  like  '__字母'；
                       7：查询空值：is null字段为空的记录，is not null字段不为空的记录。
                       8:带and的多条件查询：select 字段1，字段2，......，字段n
                                                                                                from 表名
                                                                                                 where  查询条件1and查询条件2；
                      9：带or的多条件查询：select 字段1，字段2，......，字段n
                                                                                                from 表名
                                                                                                 where  查询条件1or查询条件2；
                       and的优先级高于or
                   10:查询结果不重复：select distinct 字段名 from 表名；
                   11：对查询结果排序：1：单列排序：order   by  表名；
                                                      2：多列排序：order by  表名1，表名2；
在对多列进行排序的时候，首先排序的第一列必须有相同的列值，才会对第二列进行排序，如果第一列数据中所有值都是唯一的，将不再对第二列进行排序。
                                                              3：制定排序方向：select 字段1，字段2，......，字段n
                                                                                                from 表名
                                                                                                order  by  字段名   desc；
与DESC相反的是ASC（升序排序），将字段列中的数据，按字母表顺序升序排序，实际上，在排序的时候ASC是作为默认的排序方式，所以加不加都可以。
                                                            4：多列指定排序方向：select 字段1，字段2，......，字段n
                                                                                                from 表名
                                                                                                order  by  字段名1  desc，字段名
2；
DESC关键字只对其前面的列降序排列，在这里只对f_price排序，而并没有对f_name进行排序，因此，f_price按降序排序，而f_name列仍按升序排序。如果要对多列都进行降序排序，必须要在每一列的列名后面加DESC关键字。
                           12：分组查询：【group by 字段】 【having  <条件表达式>】                        
                                                  1：创建分组   group by 关键字通常和集合函数一起 
使用，例如max  min  count   sum   avg；
2：使用having过滤分组 ：后面跟条件。
having 和where的区别：having在数据分组之后进行过滤来选择分组，而where在分组之前用来选择记录。另外where排除的记录不再包括在分组中。
3：在group by 子句中使用with rollup：使用之后所有查询出的分组记录之后增加一天记录，该记录为所有记录的总和。
4：多字段分组：group by 字段1，字段2，。。。。字段n;
5：group by 和 order by 一起用:当使用rollup时，不能同时使用order  by 子句进行结果排序。
6：limit 【位置偏移量】行数；
13：集合函数
1：count(*)或count(字段名)计算行的总数
2：sum 求总和：sum 可以和group by 一起用，计算每个分组的总和，                     			   			sum()在计算时，忽略null；
3：avg()求平均值：avg()可以和group by 一起用，计算每个分组的平均值
4:max()最大值:max()可以和group by 一起用，计算每个分组的最大值。
5:min()最小值：min()可以和group by 一起用，计算每个分组的最小值。
         14：连接查询:
1:内连接查询:inner join；
       2:外连接查询：left join(左连接)：返回包括左表中的所有记录和右表中连接字段相等的的记录。
                              right join（右连接）:返回包括右表中的所有记录和右表中连接字段相等的的记录。
      3：复合条件连接查询:在连接查询时，通过添加过滤条件，限制查询的结果，使查更加询结果更加准确。
15：子查询
1：常用操作符：any(some)  all   in   exists
2:带any   some关键字的子查询：any关键字接在一个比较操作符的后面，表示若与子查询返回的任何值比较为true，则返回true。
3：带all关键字的子查询：all关键字接在一个比较操作符的后面，表示与子查询返回的所有值比较为true，则返回true。
4：带exists 关键字的子查询：后面的参数是一个任意的子查询，系统对子查询进行运算以判断它是否返回行，如果至少返回一行，那么exists 的结果为true，此时外层查询语句将进行查询，如果子查询没有返回任何行，那么exists返回的结果是false，此时外层将不进行查询。
5：带in关键字的子查询：查询时，内层查询语句仅仅返回一个数据列，这个数据列里的值将提供给外层查询语句进行比较操作。
6:带比较运算符的子查询:<   <=    =   >=    !=
7:合并查询结果：union 可以给出多条select语句，并将他们的结果组合成单个结果集。合并时，两个表对应的列数和数据类型必须相同。各个select语句之间使用union或union all关键字分隔。union不使用关键字all,执行的时候删除重复的记录，所有返回的行都是唯一的；使用关键字all的作用是不删除重复行也不对结果进行自动排序。select column，.......from table1
                                                     union 【all】
                                                    select column,.......from table2
8：union和union all 的区别:使用union all 的功能是不删除重复行，加上all 关键字语句执行时所需要的资源少，所以尽可能的使用它，因此知道有重复行但是想保留这些行，确定查询结果中不会有重复数据或者不需要去掉重复数据的时候，应当使用union all 以提高查询效率。
16：为表和字段取别名
1：为表取别名：表名 as 表别名
2：为字段取别名：列名 as 列别名
17：使用正则表达式查询:regexp
1:选项        说明                            例子                                           匹配值示例
            ^           匹配文本的开始字符     '^b'匹配以字母b开头的字符串    book,big
           $          匹配文本的结束字符       'st$'匹配以st结尾的字符串          test，resist
          *  匹配零个或多个在他前面的字符   'f*n'匹配字符n前面有任意个字符f     fn,fan,faan
   .            匹配任意单个字符            'b.t'匹配任何b和t之间有一个字符     bit,bat,but
+      匹配前面的字符1次或多次     'ba+'匹配以b开头后面紧跟至少有一个a    ba,bay
  <字符串> 匹配包含指定的字符串的文本    'fa'                                                     fan,afa,faad
 [字符集合]  匹配字符集合中的任何一个字符  '[xz]' 匹配x或者z                      dizzy,zebra,
[^]               匹配不在括号中的任何字符    '[^abc]'匹配任何不包含a,b,或c的字符串   desk,fox
字符串{n,}  匹配前面的字符串至少n次     b{2}匹配2个或更多的b      bbb,bbbb,bbbbbbb
字符串{n,m} 匹配前面的字符串至少m次，  b{2,4}匹配最少2个，最多4个b    bb,bbb,bbbb
     如果N为0，此参数为可选参数   
    18：
1：字符'^'匹配以特定字符或字符串开头的记录
2:字符'$'匹配以特定字符或字符串结尾的记录
3:用符号’.‘来替代字符串中的任意一个字符
4:使用’*‘和’+‘来匹配多个字符:*匹配前面的字符任意多次，包括0次，+匹配前面的字符至少一次。
5：匹配多个字符串用  '|'  隔开。
6：匹配指定字符中的任意一个   [ ]     [ot]  匹配o或t
7:[^字符集和] 匹配不在指定集合中的任何字符



