接收文件
客户端

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;
//客户端
public class FasongduanDemo {

public static void main(String[] args) {
// TODO Auto-generated method stub
Socket socket = null;
try {
socket = new Socket("192.168.199.215",8989);
System.out.println("是否连接成功"+socket.isConnected());
} catch (Exception e2) {
// TODO Auto-generated catch block
e2.printStackTrace();
}

File file = new File("Text.txt");
//输入
try {
InputStream in = new FileInputStream(file);
byte[] b = new byte[1024];
int len = 0;
int temp = 0;
StringBuffer sb = new StringBuffer();
while((temp=in.read(b))!=-1){
b[len]=(byte)temp;
len++;
}
in.close();

//输出
OutputStream out = socket.getOutputStream();
out.write(b);
out.close();
} catch (Exception e1) {
// TODO Auto-generated catch block
e1.printStackTrace();
}
}
}

服务端

import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;
//服务端
public class JieshouDemo {

public static void main(String[] args) {
// TODO Auto-generated method stub
try {
//创建服务端，并开通注册端口
ServerSocket serversocket = new ServerSocket(8989);
while(true){
System.out.println("服务器端创建成功");
//监听对应端口 阻塞
Socket socket = serversocket.accept();
System.out.println("正在监听端口");
InputStream inputstream = socket.getInputStream();
byte[] bytes = new byte[1024];
int len = 0;
StringBuffer sb = new StringBuffer();
while((len = inputstream.read(bytes))!=-1){
sb.append(new String(bytes,0,len));
}
System.out.println("服务器端：你是干什么的?");
System.out.println("客户端："+sb.toString());
inputstream.close();
String address = new String(socket.getInetAddress().getHostName());
System.out.println("有人来访问地址时"+address);
//服务端输出流
File file = new File("ccc.txt");
OutputStream out = new FileOutputStream(file,true);
String ss = sb.toString();
byte[] g = ss.getBytes();
for(int i=0;i<g.length;i++){
out.write(g[i]);
}
out.close();
}
} catch (Exception e) {
// TODO Auto-generated catch block
e.printStackTrace();
}


}

}







反馈的

服务端

import java.net.*;
import java.io.*;
public class Sever{
public static void main(String[] kl) throws IOException{
ServerSocket serverSocket = new ServerSocket(8888);
try{
while(true){
System.out.println("服务器建立成功");
Socket socket = serverSocket.accept();
System.out.println("正在监听");
InputStream in = socket.getInputStream();
//服务器读入
byte[] b = new byte[1024];
int len = 0;
StringBuffer sb = new StringBuffer();
while((len = in.read(b))!=-1){
sb.append(new String(b,0,len));
}
System.out.println("服务器端：你是干什么的");
System.out.println("客户端:"+sb.toString());

String address = new String(socket.getInetAddress().getHostName());
System.out.println("有访问者,地址是:"+address);

//服务器输出
OutputStream out = socket.getOutputStream();
String ss = "服务端收到,over!";
byte[] s = ss.getBytes();
out.write(s);
out.close();
in.close();

}
}catch(Exception e){
System.out.println(e);
}
}
}

客户端


import java.io.*;
import java.net.*;
public class Client{
public static void main(String[] kl){
Socket socket = null;
try{
//socket = new Socket("127.0.0.1",8888);
socket = new Socket("192.168.199.110",8888);
System.out.println("是否连接成功"+socket.isConnected());
OutputStream out = socket.getOutputStream();
out.write("邓艳鑫,yes!".getBytes());
//将socket输出流禁用
socket.shutdownOutput();

//接收服务器写出的内容
InputStream in = socket.getInputStream();
byte[] b = new byte[1024];
int len = 0;
int temp = 0;
while((temp = in.read())!=-1){
b[len]=(byte)temp;
len++;
}
System.out.println(new String(b,0,len));
in.close();
out.close();

}catch(Exception e){
System.out.println("有异常"+e);
}
}
}
